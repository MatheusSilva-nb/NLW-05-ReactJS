{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/null/estudos/NLW-05-ReactJS/src/components/Player/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Image from \"next/image\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport { usePlayer } from \"../../contexts/PlayerContexts\";\nimport styles from \"./styles.module.scss\";\nimport { convertDurationToTimeString } from \"../../utils/convertDurationToTimeString\";\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      isLooping = _usePlayer.isLooping,\n      isShuffling = _usePlayer.isShuffling,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      setPlayingState = _usePlayer.setPlayingState,\n      togglePlay = _usePlayer.togglePlay,\n      toggleLoop = _usePlayer.toggleLoop,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      clearPlayerState = _usePlayer.clearPlayerState,\n      hasNext = _usePlayer.hasNext,\n      hasPrevious = _usePlayer.hasPrevious;\n\n  useEffect(function () {\n    if (!audioRef.current) return;\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener(\"timeupdate\", function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    if (hasNext) {\n      playNext();\n    } else {\n      clearPlayerState();\n    }\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: \"#04d361\"\n            },\n            railStyle: {\n              backgroundColor: \"#9f75ff\"\n            },\n            handleStyle: {\n              borderColor: \"#04d361\",\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true,\n        onEnded: handleEpisodeEnded,\n        loop: isLooping,\n        onPlay: function onPlay() {\n          return setPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setPlayingState(false);\n        },\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"RB5oCgpBF7chL2lPcYuVUqaPRbw=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/null/estudos/NLW-05-ReactJS/src/components/Player/index.tsx"],"names":["Image","useEffect","useRef","useState","Slider","usePlayer","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","playNext","playPrevious","setPlayingState","togglePlay","toggleLoop","toggleShuffle","clearPlayerState","hasNext","hasPrevious","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","handleEpisodeEnded","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from \"next/image\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\n\nimport { usePlayer } from \"../../contexts/PlayerContexts\";\n\nimport styles from \"./styles.module.scss\";\nimport { convertDurationToTimeString } from \"../../utils/convertDurationToTimeString\";\n\nexport function Player() {\n    const audioRef = useRef<HTMLAudioElement>(null);\n    const [progress, setProgress] = useState(0);\n\n    const {\n        episodeList,\n        currentEpisodeIndex,\n        isPlaying,\n        isLooping,\n        isShuffling,\n        playNext,\n        playPrevious,\n        setPlayingState,\n        togglePlay,\n        toggleLoop,\n        toggleShuffle,\n        clearPlayerState,\n        hasNext,\n        hasPrevious,\n    } = usePlayer();\n\n    useEffect(() => {\n        if (!audioRef.current) return;\n\n        if (isPlaying) {\n            audioRef.current.play();\n        } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying]);\n\n    function setupProgressListener() {\n        audioRef.current.currentTime = 0;\n\n        audioRef.current.addEventListener(\"timeupdate\", () => {\n            setProgress(Math.floor(audioRef.current.currentTime));\n        });\n    }\n\n    function handleSeek(amount: number) {\n        audioRef.current.currentTime = amount;\n        setProgress(amount);\n    }\n\n    function handleEpisodeEnded() {\n        if (hasNext) {\n            playNext();\n        } else {\n            clearPlayerState();\n        }\n    }\n\n    const episode = episodeList[currentEpisodeIndex];\n\n    return (\n        <div className={styles.playerContainer}>\n            <header>\n                <img src=\"/playing.svg\" alt=\"Tocando agora\" />\n                <strong>Tocando agora</strong>\n            </header>\n\n            {episode ? (\n                <div className={styles.currentEpisode}>\n                    <Image width={592} height={592} src={episode.thumbnail} objectFit=\"cover\" />\n                    <strong>{episode.title}</strong>\n                    <span>{episode.members}</span>\n                </div>\n            ) : (\n                <div className={styles.emptyPlayer}>\n                    <strong>Selecione um podcast para ouvir</strong>\n                </div>\n            )}\n\n            <footer className={!episode ? styles.empty : \"\"}>\n                <div className={styles.progress}>\n                    <span>{convertDurationToTimeString(progress)}</span>\n                    <div className={styles.slider}>\n                        {episode ? (\n                            <Slider\n                                max={episode.duration}\n                                value={progress}\n                                onChange={handleSeek}\n                                trackStyle={{ backgroundColor: \"#04d361\" }}\n                                railStyle={{ backgroundColor: \"#9f75ff\" }}\n                                handleStyle={{\n                                    borderColor: \"#04d361\",\n                                    borderWidth: 4,\n                                }}\n                            />\n                        ) : (\n                            <div className={styles.emptySlider} />\n                        )}\n                    </div>\n                    <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n                </div>\n\n                {episode && (\n                    <audio\n                        src={episode.url}\n                        ref={audioRef}\n                        autoPlay\n                        onEnded={handleEpisodeEnded}\n                        loop={isLooping}\n                        onPlay={() => setPlayingState(true)}\n                        onPause={() => setPlayingState(false)}\n                        onLoadedMetadata={setupProgressListener}\n                    />\n                )}\n\n                <div className={styles.buttons}>\n                    <button\n                        type=\"button\"\n                        disabled={!episode || episodeList.length === 1}\n                        onClick={toggleShuffle}\n                        className={isShuffling ? styles.isActive : \"\"}\n                    >\n                        <img src=\"/shuffle.svg\" alt=\"Embaralhar\" />\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={playPrevious}\n                        disabled={!episode || !hasPrevious}\n                    >\n                        <img src=\"/play-previous.svg\" alt=\"Tocar anterior\" />\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={styles.playButton}\n                        disabled={!episode}\n                        onClick={togglePlay}\n                    >\n                        {isPlaying ? (\n                            <img src=\"/pause.svg\" alt=\"Tocar\" />\n                        ) : (\n                            <img src=\"/play.svg\" alt=\"Tocar\" />\n                        )}\n                    </button>\n                    <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\n                        <img src=\"/play-next.svg\" alt=\"Tocar próxima\" />\n                    </button>\n                    <button\n                        type=\"button\"\n                        disabled={!episode}\n                        onClick={toggleLoop}\n                        className={isLooping ? styles.isActive : \"\"}\n                    >\n                        <img src=\"/repeat.svg\" alt=\"Repetir\" />\n                    </button>\n                </div>\n            </footer>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}